[{"path":"https://github.com/mutopsy/mutolabr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hiroyuki Muto. Author, maintainer.","code":""},{"path":"https://github.com/mutopsy/mutolabr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Muto H (2025). mutolabr: Convenient R Functions Frequently Used mutolab. R package version 1.0.0, https://github.com/mutopsy/mutolabr.","code":"@Manual{,   title = {mutolabr: Convenient R Functions Frequently Used in mutolab},   author = {Hiroyuki Muto},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/mutopsy/mutolabr}, }"},{"path":[]},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convenient R Functions Frequently Used in mutolab","text":"mutolabr R package provides convenient functions frequently used mutolab. package includes functions : Conduct frequentist Bayesian t-tests effect size estimation (t_test_all). Perform correlation tests using frequentist Bayesian methods variables given dataset (cor_test_all). Compute summary statistics single variable, including highest density interval (hdi), mode (mode_stat), population variance (var_desc), population standard deviation (sd_desc). Calculate probability direction (pd) MCMC samples posterior distribution. Retrieve list currently loaded R packages along versions (loaded_packages_version).","code":""},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convenient R Functions Frequently Used in mutolab","text":"can install mutolabr GitHub using devtools:","code":"# Install devtools if not already installed if (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\")  # Install mutolabr devtools::install_github(\"mutopsy/mutolabr\")"},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Convenient R Functions Frequently Used in mutolab","text":"package requires: * R (>= 4.1.0) * dplyr * tidyr * BayesFactor * effectsize","code":""},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Convenient R Functions Frequently Used in mutolab","text":"installation, can load package using library function.","code":"library(mutolabr)"},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"list-of-functions","dir":"","previous_headings":"","what":"List of Functions","title":"Convenient R Functions Frequently Used in mutolab","text":"details function, refer function references.","code":""},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"statistical-tests","dir":"","previous_headings":"List of Functions","what":"Statistical Tests","title":"Convenient R Functions Frequently Used in mutolab","text":"t_test_all: Perform Frequentist Bayesian t-tests Effect Size Estimation [Document] cor_test_all: Perform Correlation Tests Frequentist Bayesian Methods [Document]","code":""},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"compute-summary-statistics","dir":"","previous_headings":"List of Functions","what":"Compute Summary Statistics","title":"Convenient R Functions Frequently Used in mutolab","text":"summary_stat: Compute Summary Statistics [Document] var_desc: Compute Population Variance [Document] sd_desc: Compute Population Standard Deviation [Document] mode_stat: Compute Mode Distribution [Document] hdi: Compute Highest Density Interval (HDI) [Document] pdir: Probability Direction (pd) Calculation [Document]","code":""},{"path":[]},{"path":"https://github.com/mutopsy/mutolabr/index.html","id":"v100-2025-02-28","dir":"","previous_headings":"Version History","what":"v1.0.0 (2025-02-28)","title":"Convenient R Functions Frequently Used in mutolab","text":"Initial release mutolabr package. Implemented t_test_all(), cor_test_all(), summary_stat(), var_desc(), sd_desc(), mode_stat(), hdi(), pdir().","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/cor_test_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","title":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","text":"function computes pairwise correlations variables given dataset, supporting frequentist Bayesian approaches. provides multiple correlation estimates, confidence intervals, Bayesian credible intervals, probability direction (pd), Bayes factors.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/cor_test_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","text":"","code":"cor_test_all(   dat,   cor = TRUE,   cor_EAP = FALSE,   cor_MAP = FALSE,   cor_MED = FALSE,   pd = FALSE,   bf = FALSE,   ci = c(\"freq\", \"bayes_central\", \"bayes_hdi\"),   triangle = c(\"upper\", \"lower\", \"full\"),   alternative = c(\"two.sided\", \"less\", \"greater\"),   method = c(\"pearson\", \"kendall\", \"spearman\"),   exact = NULL,   conf.level = 0.95,   continuity = FALSE,   rscale_est = \"ultrawide\",   rscale_bf = \"ultrawide\",   iterations = 10000,   map_density_n = 512,   ... )"},{"path":"https://github.com/mutopsy/mutolabr/reference/cor_test_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","text":"dat data frame matrix containing numeric variables correlation analysis. cor Logical. TRUE, computes frequentist correlation coefficients (default: TRUE). cor_EAP Logical. TRUE, computes expected posteriori (EAP) estimate correlation coefficient (default: FALSE). cor_MAP Logical. TRUE, computes maximum posteriori (MAP) estimate correlation coefficient (default: FALSE). cor_MED Logical. TRUE, computes median posterior distribution (MED) correlation coefficient (default: FALSE). pd Logical. TRUE, computes probability direction (pd) based posterior distributions (default: FALSE). bf Logical. TRUE, computes Bayes factors presence correlation versus null hypothesis (default: FALSE). ci Character. Specifies type confidence credible interval: \"freq\" (frequentist confidence interval), \"bayes_central\" (Bayesian central credible interval), \"bayes_hdi\" (highest density interval based posterior distribution) (default: \"freq\"). triangle Character. Specifies part correlation matrix return: \"upper\", \"lower\", \"full\" (default: \"upper\"). alternative Character. Specifies alternative hypothesis frequentist test: \"two.sided\", \"less\", \"greater\" (default: \"two.sided\"). method Character. Specifies correlation method frequentist test: \"pearson\", \"kendall\", \"spearman\" (default: \"pearson\"). exact Logical NULL. TRUE, computes exact p-values small sample sizes using Spearman Kendall correlations. conf.level Numeric. confidence level frequentist intervals credibility level Bayesian intervals (default: 0.95). continuity Logical. TRUE, applies continuity correction Kendall correlations (default: FALSE). rscale_est Numeric character. Specifies Cauchy prior scale Bayesian estimation posterior distribution. Options: \"ultrawide\", \"wide\", \"medium\", positive real number (default: \"ultrawide\"). Passed BayesFactor::correlationBF(). rscale_bf Numeric character. Specifies Cauchy prior scale Bayes factor calculation. Options: \"ultrawide\", \"wide\", \"medium\", positive real number (default: \"ultrawide\"). Passed BayesFactor::correlationBF(). iterations Integer. Number MCMC samples Bayesian estimation (default: 10000). map_density_n Integer. Number bins MAP density estimation (default: 512). ... Additional arguments passed cor.test().","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/cor_test_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","text":"list containing: data frame computed correlation statistics. table_XX data frame corresponding table named \"table_XX\", \"XX\" derived output variables (e.g., \"table_cor\", \"table_p\", \"table_BF10\"). content table depends provided inputs.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/cor_test_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Correlation Tests with Frequentist and Bayesian Methods — cor_test_all","text":"","code":"# Frequentist analysis results <- cor_test_all(mtcars[, 1:5]) results$all  # View detailed results in a tidy format #>    var_row var_col row col        cor      lower      upper         t df #> 1      mpg     cyl   1   2 -0.8521620 -0.9257694 -0.7163171 -8.919699 30 #> 2      mpg    disp   1   3 -0.8475514 -0.9233594 -0.7081376 -8.747152 30 #> 3      mpg      hp   1   4 -0.7761684 -0.8852686 -0.5860994 -6.742389 30 #> 4      mpg    drat   1   5  0.6811719  0.4360484  0.8322010  5.096042 30 #> 5      cyl    disp   2   3  0.9020329  0.8072442  0.9514607 11.445474 30 #> 6      cyl      hp   2   4  0.8324475  0.6816016  0.9154223  8.228604 30 #> 7      cyl    drat   2   5 -0.6999381 -0.8429083 -0.4646481 -5.367824 30 #> 8     disp      hp   3   4  0.7909486  0.6106794  0.8932775  7.080122 30 #> 9     disp    drat   3   5 -0.7102139 -0.8487237 -0.4805193 -5.525681 30 #> 10      hp    drat   4   5 -0.4487591 -0.6895522 -0.1186280 -2.750459 30 #>               p n_pair n_na #> 1  6.112687e-10     32    0 #> 2  9.380327e-10     32    0 #> 3  1.787835e-07     32    0 #> 4  1.776240e-05     32    0 #> 5  1.802838e-12     32    0 #> 6  3.477861e-09     32    0 #> 7  8.244636e-06     32    0 #> 8  7.142679e-08     32    0 #> 9  5.282022e-06     32    0 #> 10 9.988772e-03     32    0 results$table_cor  # View correlation matrix #>      mpg       cyl       disp         hp       drat #> mpg   NA -0.852162 -0.8475514 -0.7761684  0.6811719 #> cyl   NA        NA  0.9020329  0.8324475 -0.6999381 #> disp  NA        NA         NA  0.7909486 -0.7102139 #> hp    NA        NA         NA         NA -0.4487591 #> drat  NA        NA         NA         NA         NA  # Calculation of Bayesian statistics results <- cor_test_all(mtcars[, 1:5], cor_MAP = TRUE, ci = \"bayes_hdi\",                         bf = TRUE, pd = TRUE, rscale_est = \"ultrawide\",                         rscale_bf = \"ultrawide\") results$all  # View detailed results in a tidy format #>    var_row var_col row col        cor    cor_MAP      lower      upper #> 1      mpg     cyl   1   2 -0.8521620 -0.8551925 -0.9303947 -0.7104695 #> 2      mpg    disp   1   3 -0.8475514 -0.8469097 -0.9182475 -0.6992175 #> 3      mpg      hp   1   4 -0.7761684 -0.7745920 -0.8935721 -0.5762200 #> 4      mpg    drat   1   5  0.6811719  0.6600349  0.4151486  0.8234925 #> 5      cyl    disp   2   3  0.9020329  0.9006671  0.7974503  0.9554925 #> 6      cyl      hp   2   4  0.8324475  0.8267009  0.6622360  0.9069058 #> 7      cyl    drat   2   5 -0.6999381 -0.6995693 -0.8356096 -0.4527822 #> 8     disp      hp   3   4  0.7909486  0.7794062  0.6037958  0.8976142 #> 9     disp    drat   3   5 -0.7102139 -0.6974934 -0.8446803 -0.4710733 #> 10      hp    drat   4   5 -0.4487591 -0.4223691 -0.6746637 -0.1233123 #>            t df            p     pd         BF10 n_pair n_na #> 1  -8.919699 30 6.112687e-10 1.0000 1.832837e+07     32    0 #> 2  -8.747152 30 9.380327e-10 1.0000 1.233151e+07     32    0 #> 3  -6.742389 30 1.787835e-07 1.0000 9.718143e+04     32    0 #> 4   5.096042 30 1.776240e-05 1.0000 1.451650e+03     32    0 #> 5  11.445474 30 1.802838e-12 1.0000 4.069716e+09     32    0 #> 6   8.228604 30 3.477861e-09 1.0000 3.671160e+06     32    0 #> 7  -5.367824 30 8.244636e-06 1.0000 2.916590e+03     32    0 #> 8   7.080122 30 7.142679e-08 1.0000 2.259954e+05     32    0 #> 9  -5.525681 30 5.282022e-06 1.0000 4.375586e+03     32    0 #> 10 -2.750459 30 9.988772e-03 0.9942 5.262622e+00     32    0 results$table_BF10  # View Bayes factor matrix #>      mpg      cyl       disp         hp        drat #> mpg   NA 18328365   12331514   97181.43 1451.650039 #> cyl   NA       NA 4069716342 3671159.87 2916.590374 #> disp  NA       NA         NA  225995.44 4375.586326 #> hp    NA       NA         NA         NA    5.262622 #> drat  NA       NA         NA         NA          NA"},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Highest Density Interval (HDI) — hdi","title":"Compute the Highest Density Interval (HDI) — hdi","text":"function calculates highest density interval (HDI) given set samples. HDI interval contains specified proportion (default 95%) highest density values distribution.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Highest Density Interval (HDI) — hdi","text":"","code":"hdi(x, prob = 0.95)"},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Highest Density Interval (HDI) — hdi","text":"x numeric vector data values HDI calculated. prob probability mass HDI calculate. Default 0.95.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Highest Density Interval (HDI) — hdi","text":"numeric vector length 2 representing lower upper bounds HDI.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Highest Density Interval (HDI) — hdi","text":"function first sorts input data computes necessary quantiles using inear interpolation. identifies interval contains highest density, ensuring HDI encompasses specified probability mass. Note function support case two separate HDIs exist.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/hdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Highest Density Interval (HDI) — hdi","text":"","code":"set.seed(123) data <- rnorm(1000)  # Generate random normal data hdi(data, prob = 0.95) #> [1] -2.053247  1.879089"},{"path":"https://github.com/mutopsy/mutolabr/reference/loaded_packages_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of currently loaded packages and their versions — loaded_packages_version","title":"Get a list of currently loaded packages and their versions — loaded_packages_version","text":"function retrieves names versions currently loaded R packages. returns data frame package names first column respective versions second column.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/loaded_packages_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of currently loaded packages and their versions — loaded_packages_version","text":"","code":"loaded_packages_version()"},{"path":"https://github.com/mutopsy/mutolabr/reference/loaded_packages_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of currently loaded packages and their versions — loaded_packages_version","text":"data frame two columns: package name loaded package. version version loaded package.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/loaded_packages_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of currently loaded packages and their versions — loaded_packages_version","text":"","code":"# Get the list of loaded packages with versions loaded_packages_version() #>         package    version #> 1   BayesFactor 0.9.12.4.7 #> 2        Matrix    1.6.1.1 #> 3  MatrixModels      0.5.3 #> 4            R6      2.5.1 #> 5          Rcpp   1.0.13.1 #> 6          base      4.3.2 #> 7    bayestestR     0.15.0 #> 8         bslib      0.8.0 #> 9        cachem      1.1.0 #> 10          cli      3.6.3 #> 11         coda   0.19.4.1 #> 12     compiler      4.3.2 #> 13         curl      6.2.1 #> 14     datasets      4.3.2 #> 15   datawizard     0.13.0 #> 16         desc      1.4.3 #> 17     devtools      2.4.5 #> 18       digest     0.6.37 #> 19      downlit      0.4.4 #> 20        dplyr      1.1.4 #> 21   effectsize      1.0.0 #> 22     ellipsis      0.3.2 #> 23     evaluate      1.0.1 #> 24        fansi      1.0.6 #> 25      fastmap      1.2.0 #> 26  fontawesome      0.5.3 #> 27           fs      1.6.5 #> 28     generics      0.1.3 #> 29         glue      1.8.0 #> 30    grDevices      4.3.2 #> 31     graphics      4.3.2 #> 32         grid      4.3.2 #> 33    htmltools    0.5.8.1 #> 34  htmlwidgets      1.6.4 #> 35       httpuv     1.6.15 #> 36        httr2      1.1.0 #> 37      insight      1.0.0 #> 38    jquerylib      0.1.4 #> 39     jsonlite      1.8.9 #> 40        knitr       1.49 #> 41        later      1.4.1 #> 42      lattice     0.21.9 #> 43    lifecycle      1.0.4 #> 44     magrittr      2.0.3 #> 45      memoise      2.0.1 #> 46      methods      4.3.2 #> 47         mime       0.12 #> 48       miniUI    0.1.1.1 #> 49     mutolabr      1.0.0 #> 50      mvtnorm      1.3.2 #> 51     parallel      4.3.2 #> 52   parameters     0.24.0 #> 53      pbapply      1.7.2 #> 54       pillar     1.10.0 #> 55     pkgbuild      1.4.5 #> 56    pkgconfig      2.0.3 #> 57      pkgdown      2.1.1 #> 58      pkgload      1.4.0 #> 59      profvis      0.4.0 #> 60     promises      1.3.2 #> 61        purrr      1.0.2 #> 62     rappdirs      0.3.3 #> 63      remotes      2.5.0 #> 64        rlang      1.1.4 #> 65    rmarkdown       2.29 #> 66   rstudioapi     0.17.1 #> 67         sass      0.4.9 #> 68  sessioninfo      1.2.3 #> 69        shiny     1.10.0 #> 70        stats      4.3.2 #> 71      stringi      1.8.4 #> 72      stringr      1.5.1 #> 73       tibble      3.2.1 #> 74        tidyr      1.3.1 #> 75   tidyselect      1.2.1 #> 76        tools      4.3.2 #> 77   urlchecker      1.0.1 #> 78      usethis      3.1.0 #> 79        utils      4.3.2 #> 80        vctrs      0.6.5 #> 81      whisker      0.4.1 #> 82        withr      3.0.2 #> 83         xfun       0.49 #> 84         xml2      1.3.6 #> 85       xtable      1.8.4 #> 86         yaml     2.3.10"},{"path":"https://github.com/mutopsy/mutolabr/reference/mode_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Mode of a Distribution — mode_stat","title":"Compute the Mode of a Distribution — mode_stat","text":"function estimates mode (frequent value) given numeric vector using kernel density estimation. mode identified value kernel density maximized.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/mode_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Mode of a Distribution — mode_stat","text":"","code":"mode_stat(z, n = 512)"},{"path":"https://github.com/mutopsy/mutolabr/reference/mode_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Mode of a Distribution — mode_stat","text":"z numeric vector containing values mode estimated. n integer specifying number equally spaced grid points kernel density estimation (default 512).","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/mode_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Mode of a Distribution — mode_stat","text":"numeric value representing estimated mode distribution.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/mode_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Mode of a Distribution — mode_stat","text":"","code":"# Generate random data from a normal distribution set.seed(123) data <- rnorm(1000)  # Compute the mode of the distribution mode_stat(data) #> [1] 0.006799071"},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of Direction (pd) Calculation — pdir","title":"Probability of Direction (pd) Calculation — pdir","text":"function calculates probability direction (pd), proportion distribution sign median’s varies 0.50 1.00. index effect existence, proposed Makowski et al. (2019).","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of Direction (pd) Calculation — pdir","text":"","code":"pdir(x, na.rm = FALSE)"},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of Direction (pd) Calculation — pdir","text":"x numeric vector values. na.rm logical value indicating whether NA values removed calculation. Default FALSE.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of Direction (pd) Calculation — pdir","text":"numeric value 0 1, representing Probability Direction (Pd). value calculated proportion positive values x, 1 minus proportion less 0.5.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probability of Direction (pd) Calculation — pdir","text":"Makowski, D., Ben-Shachar, M. S., Chen, S. H. ., & Lüdecke, D. (2019). Indices effect existence significance Bayesian framework. Frontiers Psychology, 10, Article 2767. https://doi.org/10.3389/fpsyg.2019.02767","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/pdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of Direction (pd) Calculation — pdir","text":"","code":"set.seed(123) x <- rnorm(1000) pdir(x)  # Returns the Probability of Direction for x #> [1] 0.505 pdir(x, na.rm = TRUE)  # Removes NA values before calculation #> [1] 0.505"},{"path":"https://github.com/mutopsy/mutolabr/reference/sd_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Population Standard Deviation — sd_desc","title":"Compute Population Standard Deviation — sd_desc","text":"function calculates population standard deviation numeric vector. Unlike default sd() function R, computes sample standard deviation, function adjusts calculation use n instead n-1 denominator.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/sd_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Population Standard Deviation — sd_desc","text":"","code":"sd_desc(x, na.rm = FALSE)"},{"path":"https://github.com/mutopsy/mutolabr/reference/sd_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Population Standard Deviation — sd_desc","text":"x numeric vector containing data. na.rm logical value indicating whether remove missing values (NA) computation. Default FALSE.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/sd_desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Population Standard Deviation — sd_desc","text":"numeric value representing population standard deviation x.","code":""},{"path":[]},{"path":"https://github.com/mutopsy/mutolabr/reference/sd_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Population Standard Deviation — sd_desc","text":"","code":"data <- c(10, 20, 30, 40, 50, NA) sd_desc(data)          # Compute standard deviation including NA (returns NA) #> [1] NA sd_desc(data, na.rm = TRUE)  # Compute standard deviation ignoring NA #> [1] 14.14214"},{"path":"https://github.com/mutopsy/mutolabr/reference/summary_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics — summary_stat","title":"Compute Summary Statistics — summary_stat","text":"function calculates summary statistics given numeric vector, including mean, standard deviation, quartiles, missing value counts. function supports population sample standard deviation calculations.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/summary_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics — summary_stat","text":"","code":"summary_stat(x, descriptive = FALSE)"},{"path":"https://github.com/mutopsy/mutolabr/reference/summary_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics — summary_stat","text":"x numeric vector containing sample data. descriptive logical value indicating whether use descriptive (population) standard deviation (TRUE) sample standard deviation (FALSE, default).","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/summary_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics — summary_stat","text":"data frame following columns: mean mean non-missing values x. sd standard deviation non-missing values x. q25 25th percentile (first quartile). q50 50th percentile (median). q75 75th percentile (third quartile). n_val count non-missing values. n_na count missing values.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/summary_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Summary Statistics — summary_stat","text":"","code":"# Generate example data set.seed(123) data <- c(rnorm(100, mean = 50, sd = 10), NA, NA)  # Compute summary statistics summary_stat(data) #>       mean       sd      min      q25      q50      q75      max n_val n_na #> 1 50.90406 9.128159 26.90831 45.06146 50.61756 56.91819 71.87333   100    2 summary_stat(data, descriptive = TRUE) #>       mean       sd      min      q25      q50      q75      max n_val n_na #> 1 50.90406 9.082403 26.90831 45.06146 50.61756 56.91819 71.87333   100    2"},{"path":"https://github.com/mutopsy/mutolabr/reference/t_test_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","title":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","text":"function performs frequentist Bayesian t-tests, options effect size estimation, confidence intervals, Bayesian credible intervals, probability direction (pd), Bayes factors.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/t_test_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","text":"","code":"t_test_all(   x,   y = NULL,   var.label = c(\"x\", \"y\"),   paired = F,   var.equal = FALSE,   mu = 0,   ci = c(\"freq\", \"bayes_central\", \"bayes_hdi\"),   alternative = c(\"two.sided\", \"less\", \"greater\"),   conf.level = 0.95,   pd = FALSE,   bf = FALSE,   cor = TRUE,   mean_x_EAP = FALSE,   mean_x_MAP = FALSE,   mean_x_MED = FALSE,   diff_EAP = FALSE,   diff_MAP = FALSE,   diff_MED = FALSE,   cohens_d = NULL,   cohens_d_EAP = FALSE,   cohens_d_MAP = FALSE,   cohens_d_MED = FALSE,   cohens_dz = TRUE,   cohens_dz_EAP = FALSE,   cohens_dz_MAP = FALSE,   cohens_dz_MED = FALSE,   rscale_est = Inf,   rscale_bf = \"medium\",   iterations = 10000,   map_density_n = 512,   verbose = TRUE )"},{"path":"https://github.com/mutopsy/mutolabr/reference/t_test_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","text":"x numeric vector representing first sample. y optional numeric vector representing second sample. NULL, one-sample t-test performed (default: NULL). var.label character vector length two specifying labels x y. paired Logical. TRUE, paired t-test performed (default: FALSE). var.equal Logical. TRUE, two-sample t-test assumes equal variances (default: FALSE). mu numeric value specifying null hypothesis mean difference. ci Character. Specifies type confidence credible interval: \"freq\" (frequentist confidence interval), \"bayes_central\" (Bayesian central credible interval), \"bayes_hdi\" (highest density interval based posterior distribution) (default: \"freq\"). alternative Character. Specifies alternative hypothesis frequentist test: \"two.sided\", \"less\", \"greater\" (default: \"two.sided\"). conf.level Numeric. confidence level frequentist intervals credibility level Bayesian intervals (default: 0.95). pd Logical. TRUE, computes probability direction (pd) based posterior distributions (default: FALSE). bf Logical. TRUE, computes Bayes factors presence difference versus null hypothesis (default: FALSE). cor Logical. TRUE, computes Pearson correlation paired samples. mean_x_EAP Logical. TRUE, computes expected posteriori (EAP) estimate mean x (default: FALSE). mean_x_MAP Logical. TRUE, computes maximum posteriori (MAP) estimate mean x (default: FALSE). mean_x_MED Logical. TRUE, computes median posterior distribution (MED) mean x (default: FALSE). diff_EAP Logical. TRUE, computes expected posteriori (EAP) estimate mean difference (default: FALSE). diff_MAP Logical. TRUE, computes maximum posteriori (MAP) estimate mean difference (default: FALSE). diff_MED Logical. TRUE, computes median posterior distribution (MED) mean difference (default: FALSE). cohens_d Logical. TRUE, computes Cohen's d independent samples. cohens_d_EAP Logical. TRUE, computes expected posteriori (EAP) estimate Cohen's d (default: FALSE). cohens_d_MAP Logical. TRUE, computes maximum posteriori (MAP) estimate Cohen's d (default: FALSE). cohens_d_MED Logical. TRUE, computes median posterior distribution (MED) Cohen's d (default: FALSE). cohens_dz Logical. TRUE, computes Cohen's dz paired samples. cohens_dz_EAP Logical. TRUE, computes expected posteriori (EAP) estimate Cohen's dz (default: FALSE). cohens_dz_MAP Logical. TRUE, computes maximum posteriori (MAP) estimate Cohen's dz (default: FALSE). cohens_dz_MED Logical. TRUE, computes median posterior distribution (MED) Cohen's dz (default: FALSE). rscale_est Numeric character. Specifies Cauchy prior scale Bayesian estimation posterior distribution. Options: \"ultrawide\", \"wide\", \"medium\", positive real number (default: Inf). Passed BayesFactor::ttestBF(). rscale_bf Numeric character. Specifies Cauchy prior scale Bayes factor calculation. Options: \"ultrawide\", \"wide\", \"medium\", positive real number (default: \"medium\"). Passed BayesFactor::ttestBF(). iterations Integer. Number MCMC iterations Bayesian estimation. map_density_n Integer. Number bins MAP density estimation. verbose Logical. TRUE, prints additional messages.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/t_test_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","text":"data frame containing test statistics, effect sizes, confidence intervals, Bayesian estimates.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/t_test_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Frequentist and Bayesian t-tests with Effect Size Estimation — t_test_all","text":"","code":"set.seed(123) x <- rnorm(30,0, 1) y <- x + rnorm(30,0.5, 1)  # Welch's t-test with effect size estimation t_test_all(x, y) #>  #> ----------------------------------------------- #> Two-sample t-test #> (Welch's method applied in the frequentist analysis) #> ----------------------------------------------- #> H0: mu_x - mu_y = 0, H1: mu_x - mu_y != 0 #>  #> n_x = 30, n_y = 30 #>  #> t = -2.416334, df = 56.0632, p = 0.01895871 #> ----------------------------------------------- #> Mean of x = -0.04710376 #> Mean of y = 0.6312346 #> ----------------------------------------------- #> Diff (x-y) = -0.6783383 #> CI = [-1.240695, -0.1159818] #> ----------------------------------------------- #> Cohen's d = -0.62389485 #> CI = [-1.139925, -0.1027481] #> ----------------------------------------------- #> Note: #> The CI represents the frequentist confidence interval. #> (Confidence level = 0.95)  # Welch's t-test with Bayesian independent t-test (Bayes factor and pd) # and 95% highest density intervals t_test_all(x, y, diff_MAP = TRUE, cohens_d_MAP = TRUE, bf = TRUE, pd = TRUE, ci = \"bayes_hdi\", rscale_bf = \"medium\") #>  #> ----------------------------------------------- #> Two-sample t-test #> (Welch's method applied in the frequentist analysis) #> ----------------------------------------------- #> H0: mu_x - mu_y = 0, H1: mu_x - mu_y != 0 #>  #> n_x = 30, n_y = 30 #>  #> t = -2.416334, df = 56.0632, p = 0.01895871 #> pd = 0.9902 #> BF_10 = 2.869844 (rscale = 0.7071068) #> Note: BF is sensitive to the rscale parameter of the prior. #> ----------------------------------------------- #> Mean of x = -0.04710376 #> Mean of y = 0.6312346 #> ----------------------------------------------- #> Diff (x-y) = -0.6783383 #> MAP of diff = -0.6916485 #> CI = [-1.22348, -0.1196791] #> ----------------------------------------------- #> Cohen's d = -0.62389485 #> MAP of delta = -0.6500264 #> CI = [-1.1427925, -0.1035713] #> ----------------------------------------------- #> Note: #> The CI represents the Beyesian posterior highest density interval. #> (Probability = 0.95) #> Note: #> The posterior was approximated using 10000 samples, #> given prior rscale = Inf.  # Paired t-test with effect size estimation t_test_all(x, y, paired = TRUE) #>  #> ----------------------------------------------- #> Paired t-test #> ----------------------------------------------- #> H0: mu_x - mu_y = 0, H1: mu_x - mu_y != 0 #>  #> N = 30 (pairs) #>  #> t = -4.448914, df = 29, p = 0.0001169206 #> r_(x,y) = 0.7175137 #> ----------------------------------------------- #> Mean of x = -0.04710376 #> Mean of y = 0.6312346 #> ----------------------------------------------- #> Diff (x-y) = -0.6783383 #> CI = [-0.9901802, -0.3664964] #> ----------------------------------------------- #> Cohen's d_z = -0.8122568 #> CI = [-1.224918, -0.3995955] #> ----------------------------------------------- #> Note: #> The CI represents the frequentist confidence interval. #> (Confidence level = 0.95)  # Paired t-test with Bayesian paired t-test (Bayes factor and pd) # and 95% central credible intervals t_test_all(x, y, paired = TRUE, diff_MAP = TRUE, cohens_dz_MAP = TRUE,            bf = TRUE, pd = TRUE, ci = \"bayes_central\", rscale_bf = \"medium\") #>  #> ----------------------------------------------- #> Paired t-test #> ----------------------------------------------- #> H0: mu_x - mu_y = 0, H1: mu_x - mu_y != 0 #>  #> N = 30 (pairs) #>  #> t = -4.448914, df = 29, p = 0.0001169206 #> r_(x,y) = 0.7175137 #> pd = 0.9999 #> BF_10 = 225.371 (rscale = 0.7071068) #> Note: BF is sensitive to the rscale parameter of the prior. #> ----------------------------------------------- #> Mean of x = -0.04710376 #> Mean of y = 0.6312346 #> ----------------------------------------------- #> Diff (x-y) = -0.6783383 #> MAP of diff = -0.6957117 #> CI = [-0.9809708, -0.3694457] #> ----------------------------------------------- #> Cohen's d_z = -0.8122568 #> MAP of delta_z = -0.8325525 #> CI = [-1.231449, -0.4140352] #> ----------------------------------------------- #> Note: #> The CI represents the Beyesian central posterior interval. #> (Probability = 0.95) #> Note: #> The posterior was approximated using 10000 samples, #> given prior rscale = Inf."},{"path":"https://github.com/mutopsy/mutolabr/reference/var_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Population Variance — var_desc","title":"Compute Population Variance — var_desc","text":"function calculates population variance numeric vector. Unlike default var() function R, computes sample variance, function adjusts calculation use n instead n-1 denominator.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/var_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Population Variance — var_desc","text":"","code":"var_desc(x, na.rm = FALSE)"},{"path":"https://github.com/mutopsy/mutolabr/reference/var_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Population Variance — var_desc","text":"x numeric vector containing data. na.rm logical value indicating whether remove missing values (NA) computation. Default FALSE.","code":""},{"path":"https://github.com/mutopsy/mutolabr/reference/var_desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Population Variance — var_desc","text":"numeric value representing population variance x.","code":""},{"path":[]},{"path":"https://github.com/mutopsy/mutolabr/reference/var_desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Population Variance — var_desc","text":"","code":"data <- c(10, 20, 30, 40, 50, NA) var_desc(data)          # Compute variance including NA (returns NA) #> [1] NA var_desc(data, na.rm = TRUE)  # Compute variance ignoring NA #> [1] 200"}]
